Inception
Зарождение

Резюме: этот документ представляет собой упражнение, связанное с системным администрированием.


__________________________________________________________________________
СОДЕРЖАНИЕ

I Преамбула ...............................2
II Введение ...............................3
III Общие рекомендации ....................4
IV Обязательная часть .....................5
V бонус, часть ............................9
VI Представление и экспертная оценка .....10
__________________________________________________________________________
Глава I
Преамбула

одного контейнера недостаточно
нам нужно пойти глубже
__________________________________________________________________________
Глава II.
Вступление

Этот проект направлен на расширение ваших знаний в области системного администрирования с помощью Docker.
Вы виртуализируете несколько образов Docker, создав их на своей новой персональной виртуальной машине.
__________________________________________________________________________
Глава III.
Общие рекомендации

• Этот проект необходимо выполнить на виртуальной машине.
• Все файлы, необходимые для конфигурации вашего проекта, должны быть помещены в папку srcs.
• Также необходим Makefile, который должен находиться в корне вашего каталога. Он должен настроить все ваше приложение (т.е. он должен создавать образы Docker с помощью docker-compose.yml).
• Этот предмет требует применения на практике концепций, которые, в зависимости от вашего опыта, вы, возможно, еще не усвоили. Поэтому мы советуем вам не стесняться читать много документации, связанной с использованием Docker, а также всего остального, что вы сочтете полезным, чтобы выполнить это задание.
__________________________________________________________________________
Глава IV.
Обязательная часть

Этот проект заключается в том, что вы настраиваете небольшую инфраструктуру, состоящую из различных служб по определенным правилам. Весь проект должен быть выполнен на виртуальной машине. Вы должны использовать docker-compose.
У каждого образа Docker должно быть то же имя, что и у соответствующей службы.
Каждая служба должна работать в выделенном контейнере.
По соображениям производительности контейнеры должны быть созданы либо из предпоследней стабильной версии Alpine Linux, либо из Debian Buster. Выбор остается за вами.
Вы также должны написать свои собственные файлы Dockerfile, по одному для каждой службы. Файлы Dockerfiles должны вызываться в файле docker-compose.yml из файла Makefile.
Это означает, что вы должны сами создавать образы Docker для своего проекта. Затем запрещается извлекать готовые образы Docker, а также использовать такие службы, как DockerHub (Alpine / Debian исключены из этого правила).
Затем вам необходимо настроить:
• Контейнер Docker, содержащий только NGINX с TLSv1.2 или TLSv1.3.
• Контейнер Docker, содержащий WordPress + php-fpm (он должен быть установлен и настроен) только без nginx.
• Контейнер Docker, содержащий MariaDB только без nginx.
• Том, содержащий вашу базу данных WordPress.
• Второй том, содержащий файлы вашего веб-сайта WordPress.
• Докер-сеть, которая устанавливает соединение между вашими контейнерами.
Ваши контейнеры должны перезапускаться в случае сбоя.

============================================================================================
|   info:
|
|   Контейнер Docker - это не виртуальная машина.
|   Таким образом, не рекомендуется использовать какие-либо хакерские патчи, основанные на
| 'tail -f' и т. Д., При попытке его запустить. Прочтите о том, как работают демоны и стоит ли
|   их использовать.
============================================================================================


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!       Конечно, использование network: host или --link или links: запрещено.
!       Сетевая строка должна присутствовать в вашем файле docker-compose.yml.
!       Ваши контейнеры не должны запускаться командой, выполняющей бесконечный цикл.
!       Таким образом, это также относится к любой команде, используемой в качестве точки входа
!   или в сценариях точки входа. Ниже приведены несколько запрещенных хакерских патчей: tail
!   -f, bash, sleep infinity, while true.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

============================================================================================
|   info:
|
|   Прочтите о PID 1 и лучших практиках написания файлов Docker.
============================================================================================

В вашей базе данных WordPress должно быть два пользователя, один из которых является администратором. Имя пользователя администратора не может содержать admin / Admin или administrator / Administrator (например, admin, administrator, Administrator, admin-123 и т. Д.).

============================================================================================
|   info:
|
|   Ваши тома будут доступны в папке / home / login / data на
|   хост-машина с использованием Docker. Разумеется, вам придется сменить логин на свой.
============================================================================================

Чтобы упростить задачу, вы должны настроить свое доменное имя так, чтобы оно указывало на ваш локальный IP-адрес.
Это доменное имя должно быть login.42.fr. Опять же, вы должны использовать свой собственный логин.
Например, если ваш логин - wil, то wil.42.fr будет перенаправлять на IP-адрес, указывающий на веб-сайт wil.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Последний тег запрещен.
!   В ваших файлах Dockerfiles не должно быть пароля.
!   Обязательно использовать переменные среды.
!   Также настоятельно рекомендуется использовать файл .env для хранения переменных среды.
!   Файл .env должен находиться в корне каталога srcs.
!   Контейнер NGINX должен быть единственной точкой входа в вашу инфраструктуру только через
!   порт 443 с использованием протокола TLSv1.2 или TLSv1.3.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Вот пример диаграммы ожидаемого результата:

СМ. SUBJECT НА АНГЛИЙСКОМ.

Ниже приведен пример ожидаемой структуры каталогов:

СМ. SUBJECT НА АНГЛИЙСКОМ.



__________________________________________________________________________
Глава V
Бонусная часть

когда закончу основу, переведу бонусы
СМ. SUBJECT НА АНГЛИЙСКОМ.
============================================================================================
|
============================================================================================

__________________________________________________________________________
Глава VI.
Представление и экспертная оценка

Как обычно, сдайте задание в репозиторий Git. Во время защиты будет оцениваться только работа внутри вашего репозитория. Не стесняйтесь дважды проверять имена ваших папок и файлов, чтобы убедиться, что они верны.
